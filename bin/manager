#!/bin/bash

APP_PWD=$(pwd)
DOCKER_PWD='infra/docker/local'
NODE_PWD='/node'
DOCKER_CONTAINER_PHP='persona-php'
DOCKER_CONTAINER_WEB='persona-web'
DOCKER_CONTAINER_DB='persona-db'
DOCKER_CONTAINER_NODE='persona-node'

# Docker setup tasks
docker_build() {
    EXTRA_PARAMS=''
    if [ "$1" == "no-cache" ] ; then
        EXTRA_PARAMS='--no-cache'
    fi

    cd $DOCKER_PWD || return
    docker-compose build --pull $EXTRA_PARAMS
    docker-compose build -t $DOCKER_CONTAINER_NODE $NODE_PWD $EXTRA_PARAMS
    cd "$APP_PWD" || return
}

docker_up() {
    cd $DOCKER_PWD || return
    docker-compose up -d
    cd "$APP_PWD" || return
}

docker_down() {
    cd $DOCKER_PWD || return
    docker-compose down
    cd "$APP_PWD" || return
}

docker_reset() {
  cd $DOCKER_PWD || return
  docker-compose down
  docker-compose up -d
  cd "$APP_PWD" || return
}

docker_update() {
  cd $DOCKER_PWD || return
  docker-compose down
  docker-compose up -d --build
  cd "$APP_PWD" || return
}

# Docker access updates
docker_db() {
    docker exec -it $DOCKER_CONTAINER_DB mysql "$1"
}

docker_php() {
    docker exec -it $DOCKER_CONTAINER_PHP bash
}

docker_web() {
    docker exec -it $DOCKER_CONTAINER_WEB bash
}

docker_node() {
    docker run -it -v "$APP_PWD":/home/app $DOCKER_CONTAINER_NODE bash
}

# GIT tasks
git_update() {
  git checkout master
  git pull origin master
}

# DB tasks
schema_update() {
  docker exec -it $DOCKER_CONTAINER_PHP bin/console doctrine:schema:update --dump-sql --force
}

# Composer tasks
composer_install() {
  docker exec -it $DOCKER_CONTAINER_PHP composer install
}

# Node tasks
modules_install() {
  docker run -it -v "$APP_PWD":/home/app $DOCKER_CONTAINER_NODE yarn install
}

# Assets tasks
assets_build() {
  docker run -it -v "$APP_PWD":/home/app $DOCKER_CONTAINER_NODE yarn encore dev
}

assets_watch() {
  docker run -it -v "$APP_PWD":/home/app $DOCKER_CONTAINER_NODE yarn encore watch
}

assets_cms_build() {
  docker run -it -v "$APP_PWD":/home/app $DOCKER_CONTAINER_NODE yarn encore dev-cms
}

assets_cms_watch() {
  docker run -it -v "$APP_PWD":/home/app $DOCKER_CONTAINER_NODE yarn encore watch-cms
}

assets_site_build() {
  docker run -it -v "$APP_PWD":/home/app $DOCKER_CONTAINER_NODE yarn encore dev-site
}

assets_site_watch() {
  docker run -it -v "$APP_PWD":/home/app $DOCKER_CONTAINER_NODE yarn encore watch-site
}

# Quality tasks
qualitify() {
  docker exec -it $DOCKER_CONTAINER_PHP bin/qualitify.sh
}

case $1 in
    "docker-build")
        docker_build "$2"
    ;;

    "docker-up")
        docker_up
    ;;

    "docker-down")
        docker_down
    ;;

    "docker-reset")
        docker_reset
    ;;

    "docker-update")
        docker_update
    ;;

    "db")
        docker_db "$2"
    ;;

    "php")
        docker_php
    ;;

    "web")
        docker_web
    ;;

    "node")
        docker_node
    ;;

    "git-update")
        git_update
    ;;

    "schema-update")
        schema_update
    ;;

    "modules-install")
        modules_install
    ;;

    "composer-install")
        composer_install
    ;;

    "assets-build")
        assets_build
    ;;

    "assets-watch")
        assets_watch
    ;;

    "assets-cms-build")
        assets_cms_build
    ;;

    "assets-cms-watch")
        assets_cms_watch
    ;;

    "assets-site-build")
        assets_site_build
    ;;

    "assets-site-watch")
        assets_site_watch
    ;;

    "qualitify")
        qualitify
    ;;

    "uptodate")
        git_update
        docker_update
        composer_install
        schema_update
        modules_install
        assets_build
    ;;
esac

exit 0
